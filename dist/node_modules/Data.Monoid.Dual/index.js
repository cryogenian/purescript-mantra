// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Dual = {
    create: function (value) {
        return value;
    }
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_107) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_107) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_108) {
        return function (_109) {
            return Prelude["<>"](__dict_Semigroup_1)(_109)(_108);
        };
    });
};
var runDual = function (_100) {
    return _100;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_103) {
        return function (_104) {
            return Prelude["/="](__dict_Eq_4)(_103)(_104);
        };
    }, function (_101) {
        return function (_102) {
            return Prelude["=="](__dict_Eq_4)(_101)(_102);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_105) {
        return function (_106) {
            return Prelude.compare(__dict_Ord_2)(_105)(_106);
        };
    });
};
module.exports = {
    Dual: Dual, 
    eqDual: eqDual, 
    monoidDual: monoidDual, 
    ordDual: ordDual, 
    runDual: runDual, 
    semigroupDual: semigroupDual, 
    showDual: showDual
};
