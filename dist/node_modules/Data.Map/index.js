// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
function Leaf() {

};
Leaf.value = new Leaf();
function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Two.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Two(value0, value1, value2, value3);
            };
        };
    };
};
function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
};
Three.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return function (value6) {
                            return new Three(value0, value1, value2, value3, value4, value5, value6);
                        };
                    };
                };
            };
        };
    };
};
function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoLeft(value0, value1, value2);
        };
    };
};
function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoRight(value0, value1, value2);
        };
    };
};
function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeMiddle.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeRight(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
KickUp.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new KickUp(value0, value1, value2, value3);
            };
        };
    };
};
var values = function (_286) {
    if (_286 instanceof Leaf) {
        return [  ];
    };
    if (_286 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_286.value0))(Prelude["++"](Data_Array.semigroupArray)([ _286.value2 ])(values(_286.value3)));
    };
    if (_286 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_286.value0))(Prelude["++"](Data_Array.semigroupArray)([ _286.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_286.value3))(Prelude["++"](Data_Array.semigroupArray)([ _286.value5 ])(values(_286.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_284) {
    if (_284 instanceof Leaf) {
        return [  ];
    };
    if (_284 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_284.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_284.value1, _284.value2) ])(toList(_284.value3)));
    };
    if (_284 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_284.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_284.value1, _284.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_284.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_284.value4, _284.value5) ])(toList(_284.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_278) {
            if (_278 instanceof Leaf) {
                return "Leaf";
            };
            if (_278 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_278.value0) + (") (" + (Prelude.show(__dict_Show_0)(_278.value1) + (") (" + (Prelude.show(__dict_Show_1)(_278.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_278.value3) + ")")))))));
            };
            if (_278 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_278.value0) + (") (" + (Prelude.show(__dict_Show_0)(_278.value1) + (") (" + (Prelude.show(__dict_Show_1)(_278.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_278.value3) + (") (" + (Prelude.show(__dict_Show_0)(_278.value4) + (") (" + (Prelude.show(__dict_Show_1)(_278.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_278.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__280) {
        return function (__copy__281) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _280 = __copy__280;
            var _281 = __copy__281;
            tco: while (true) {
                if (_281 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_281 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_280)(_281.value1)) {
                    return new Data_Maybe.Just(_281.value2);
                };
                if (_281 instanceof Two && Prelude["<"](__dict_Ord_4)(_280)(_281.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__280 = _280;
                    var __tco__281 = _281.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _280 = __tco__280;
                    _281 = __tco__281;
                    continue tco;
                };
                if (_281 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__280 = _280;
                    var __tco__281 = _281.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _280 = __tco__280;
                    _281 = __tco__281;
                    continue tco;
                };
                if (_281 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_280)(_281.value1)) {
                    return new Data_Maybe.Just(_281.value2);
                };
                if (_281 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_280)(_281.value4)) {
                    return new Data_Maybe.Just(_281.value5);
                };
                if (_281 instanceof Three && Prelude["<"](__dict_Ord_4)(_280)(_281.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__280 = _280;
                    var __tco__281 = _281.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _280 = __tco__280;
                    _281 = __tco__281;
                    continue tco;
                };
                if (_281 instanceof Three && (Prelude["<"](__dict_Ord_4)(_281.value1)(_280) && Prelude["<="](__dict_Ord_4)(_280)(_281.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__280 = _280;
                    var __tco__281 = _281.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _280 = __tco__280;
                    _281 = __tco__281;
                    continue tco;
                };
                if (_281 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__280 = _280;
                    var __tco__281 = _281.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _280 = __tco__280;
                    _281 = __tco__281;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_285) {
    if (_285 instanceof Leaf) {
        return [  ];
    };
    if (_285 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_285.value0))(Prelude["++"](Data_Array.semigroupArray)([ _285.value1 ])(keys(_285.value3)));
    };
    if (_285 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_285.value0))(Prelude["++"](Data_Array.semigroupArray)([ _285.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_285.value3))(Prelude["++"](Data_Array.semigroupArray)([ _285.value4 ])(keys(_285.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_279) {
    if (_279 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (_287) {
    return function (_288) {
        if (_288 instanceof Leaf) {
            return Leaf.value;
        };
        if (_288 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(_287)(_288.value0), _288.value1, _287(_288.value2), Prelude["<$>"](functorMap)(_287)(_288.value3));
        };
        if (_288 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(_287)(_288.value0), _288.value1, _287(_288.value2), Prelude["<$>"](functorMap)(_287)(_288.value3), _288.value4, _287(_288.value5), Prelude["<$>"](functorMap)(_287)(_288.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__282) {
        return function (__copy__283) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _282 = __copy__282;
            var _283 = __copy__283;
            tco: while (true) {
                if (_282.length === 0) {
                    return _283;
                };
                if (_282.length >= 1) {
                    var _976 = _282.slice(1);
                    if (_282[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__283 = new Two(_283, (_282[0]).value0, (_282[0]).value1, (_282[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _282 = _976;
                        _283 = __tco__283;
                        continue tco;
                    };
                };
                if (_282.length >= 1) {
                    var _981 = _282.slice(1);
                    if (_282[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__283 = new Two((_282[0]).value0, (_282[0]).value1, (_282[0]).value2, _283);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _282 = _981;
                        _283 = __tco__283;
                        continue tco;
                    };
                };
                if (_282.length >= 1) {
                    var _989 = _282.slice(1);
                    if (_282[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__283 = new Three(_283, (_282[0]).value0, (_282[0]).value1, (_282[0]).value2, (_282[0]).value3, (_282[0]).value4, (_282[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _282 = _989;
                        _283 = __tco__283;
                        continue tco;
                    };
                };
                if (_282.length >= 1) {
                    var _997 = _282.slice(1);
                    if (_282[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__283 = new Three((_282[0]).value0, (_282[0]).value1, (_282[0]).value2, _283, (_282[0]).value3, (_282[0]).value4, (_282[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _282 = _997;
                        _283 = __tco__283;
                        continue tco;
                    };
                };
                if (_282.length >= 1) {
                    var _1005 = _282.slice(1);
                    if (_282[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__283 = new Three((_282[0]).value0, (_282[0]).value1, (_282[0]).value2, (_282[0]).value3, (_282[0]).value4, (_282[0]).value5, _283);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _282 = _1005;
                        _283 = __tco__283;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__294) {
            return function (__copy__295) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _294 = __copy__294;
                var _295 = __copy__295;
                tco: while (true) {
                    if (_294.length === 0) {
                        return new Two(_295.value0, _295.value1, _295.value2, _295.value3);
                    };
                    if (_294.length >= 1) {
                        var _1020 = _294.slice(1);
                        if (_294[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_1020)(new Three(_295.value0, _295.value1, _295.value2, _295.value3, (_294[0]).value0, (_294[0]).value1, (_294[0]).value2));
                        };
                    };
                    if (_294.length >= 1) {
                        var _1029 = _294.slice(1);
                        if (_294[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_1029)(new Three((_294[0]).value0, (_294[0]).value1, (_294[0]).value2, _295.value0, _295.value1, _295.value2, _295.value3));
                        };
                    };
                    if (_294.length >= 1) {
                        var _1041 = _294.slice(1);
                        if (_294[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__295 = new KickUp(new Two(_295.value0, _295.value1, _295.value2, _295.value3), (_294[0]).value0, (_294[0]).value1, new Two((_294[0]).value2, (_294[0]).value3, (_294[0]).value4, (_294[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _294 = _1041;
                            _295 = __tco__295;
                            continue tco;
                        };
                    };
                    if (_294.length >= 1) {
                        var _1053 = _294.slice(1);
                        if (_294[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__295 = new KickUp(new Two((_294[0]).value0, (_294[0]).value1, (_294[0]).value2, _295.value0), _295.value1, _295.value2, new Two(_295.value3, (_294[0]).value3, (_294[0]).value4, (_294[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _294 = _1053;
                            _295 = __tco__295;
                            continue tco;
                        };
                    };
                    if (_294.length >= 1) {
                        var _1065 = _294.slice(1);
                        if (_294[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__295 = new KickUp(new Two((_294[0]).value0, (_294[0]).value1, (_294[0]).value2, (_294[0]).value3), (_294[0]).value4, (_294[0]).value5, new Two(_295.value0, _295.value1, _295.value2, _295.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _294 = _1065;
                            _295 = __tco__295;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__290) {
            return function (__copy__291) {
                return function (__copy__292) {
                    return function (__copy__293) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _290 = __copy__290;
                        var _291 = __copy__291;
                        var _292 = __copy__292;
                        var _293 = __copy__293;
                        tco: while (true) {
                            if (_293 instanceof Leaf) {
                                return up(__dict_Ord_9)(_290)(new KickUp(Leaf.value, _291, _292, Leaf.value));
                            };
                            if (_293 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_291)(_293.value1)) {
                                return fromZipper(__dict_Ord_9)(_290)(new Two(_293.value0, _291, _292, _293.value3));
                            };
                            if (_293 instanceof Two && Prelude["<"](__dict_Ord_9)(_291)(_293.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__290 = Prelude[":"](new TwoLeft(_293.value1, _293.value2, _293.value3))(_290);
                                var __tco__291 = _291;
                                var __tco__292 = _292;
                                var __tco__293 = _293.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _290 = __tco__290;
                                _291 = __tco__291;
                                _292 = __tco__292;
                                _293 = __tco__293;
                                continue tco;
                            };
                            if (_293 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__290 = Prelude[":"](new TwoRight(_293.value0, _293.value1, _293.value2))(_290);
                                var __tco__291 = _291;
                                var __tco__292 = _292;
                                var __tco__293 = _293.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _290 = __tco__290;
                                _291 = __tco__291;
                                _292 = __tco__292;
                                _293 = __tco__293;
                                continue tco;
                            };
                            if (_293 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_291)(_293.value1)) {
                                return fromZipper(__dict_Ord_9)(_290)(new Three(_293.value0, _291, _292, _293.value3, _293.value4, _293.value5, _293.value6));
                            };
                            if (_293 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_291)(_293.value4)) {
                                return fromZipper(__dict_Ord_9)(_290)(new Three(_293.value0, _293.value1, _293.value2, _293.value3, _291, _292, _293.value6));
                            };
                            if (_293 instanceof Three && Prelude["<"](__dict_Ord_9)(_291)(_293.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__290 = Prelude[":"](new ThreeLeft(_293.value1, _293.value2, _293.value3, _293.value4, _293.value5, _293.value6))(_290);
                                var __tco__291 = _291;
                                var __tco__292 = _292;
                                var __tco__293 = _293.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _290 = __tco__290;
                                _291 = __tco__291;
                                _292 = __tco__292;
                                _293 = __tco__293;
                                continue tco;
                            };
                            if (_293 instanceof Three && (Prelude["<"](__dict_Ord_9)(_293.value1)(_291) && Prelude["<="](__dict_Ord_9)(_291)(_293.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__290 = Prelude[":"](new ThreeMiddle(_293.value0, _293.value1, _293.value2, _293.value4, _293.value5, _293.value6))(_290);
                                var __tco__291 = _291;
                                var __tco__292 = _292;
                                var __tco__293 = _293.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _290 = __tco__290;
                                _291 = __tco__291;
                                _292 = __tco__292;
                                _293 = __tco__293;
                                continue tco;
                            };
                            if (_293 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__290 = Prelude[":"](new ThreeRight(_293.value0, _293.value1, _293.value2, _293.value3, _293.value4, _293.value5))(_290);
                                var __tco__291 = _291;
                                var __tco__292 = _292;
                                var __tco__293 = _293.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _290 = __tco__290;
                                _291 = __tco__291;
                                _292 = __tco__292;
                                _293 = __tco__293;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_10)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_277) {
            return insert(__dict_Ord_13)(_277.value0)(_277.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__299) {
            return function (__copy__300) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _299 = __copy__299;
                var _300 = __copy__300;
                tco: while (true) {
                    if (_299.length === 0) {
                        return _300;
                    };
                    if (_299.length >= 1) {
                        var _1126 = _299.slice(1);
                        if (_299[0] instanceof TwoLeft && ((_299[0]).value2 instanceof Leaf && _300 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_1126)(new Two(Leaf.value, (_299[0]).value0, (_299[0]).value1, Leaf.value));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1131 = _299.slice(1);
                        if (_299[0] instanceof TwoRight && ((_299[0]).value0 instanceof Leaf && _300 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_1131)(new Two(Leaf.value, (_299[0]).value1, (_299[0]).value2, Leaf.value));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1140 = _299.slice(1);
                        if (_299[0] instanceof TwoLeft && (_299[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__300 = new Three(_300, (_299[0]).value0, (_299[0]).value1, (_299[0]).value2.value0, (_299[0]).value2.value1, (_299[0]).value2.value2, (_299[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _299 = _1140;
                            _300 = __tco__300;
                            continue tco;
                        };
                    };
                    if (_299.length >= 1) {
                        var _1149 = _299.slice(1);
                        if (_299[0] instanceof TwoRight && (_299[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__300 = new Three((_299[0]).value0.value0, (_299[0]).value0.value1, (_299[0]).value0.value2, (_299[0]).value0.value3, (_299[0]).value1, (_299[0]).value2, _300);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _299 = _1149;
                            _300 = __tco__300;
                            continue tco;
                        };
                    };
                    if (_299.length >= 1) {
                        var _1161 = _299.slice(1);
                        if (_299[0] instanceof TwoLeft && (_299[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1161)(new Two(new Two(_300, (_299[0]).value0, (_299[0]).value1, (_299[0]).value2.value0), (_299[0]).value2.value1, (_299[0]).value2.value2, new Two((_299[0]).value2.value3, (_299[0]).value2.value4, (_299[0]).value2.value5, (_299[0]).value2.value6)));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1173 = _299.slice(1);
                        if (_299[0] instanceof TwoRight && (_299[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1173)(new Two(new Two((_299[0]).value0.value0, (_299[0]).value0.value1, (_299[0]).value0.value2, (_299[0]).value0.value3), (_299[0]).value0.value4, (_299[0]).value0.value5, new Two((_299[0]).value0.value6, (_299[0]).value1, (_299[0]).value2, _300)));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1181 = _299.slice(1);
                        if (_299[0] instanceof ThreeLeft && ((_299[0]).value2 instanceof Leaf && ((_299[0]).value5 instanceof Leaf && _300 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_1181)(new Three(Leaf.value, (_299[0]).value0, (_299[0]).value1, Leaf.value, (_299[0]).value3, (_299[0]).value4, Leaf.value));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1189 = _299.slice(1);
                        if (_299[0] instanceof ThreeMiddle && ((_299[0]).value0 instanceof Leaf && ((_299[0]).value5 instanceof Leaf && _300 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_1189)(new Three(Leaf.value, (_299[0]).value1, (_299[0]).value2, Leaf.value, (_299[0]).value3, (_299[0]).value4, Leaf.value));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1197 = _299.slice(1);
                        if (_299[0] instanceof ThreeRight && ((_299[0]).value0 instanceof Leaf && ((_299[0]).value3 instanceof Leaf && _300 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_1197)(new Three(Leaf.value, (_299[0]).value1, (_299[0]).value2, Leaf.value, (_299[0]).value4, (_299[0]).value5, Leaf.value));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1209 = _299.slice(1);
                        if (_299[0] instanceof ThreeLeft && (_299[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1209)(new Two(new Three(_300, (_299[0]).value0, (_299[0]).value1, (_299[0]).value2.value0, (_299[0]).value2.value1, (_299[0]).value2.value2, (_299[0]).value2.value3), (_299[0]).value3, (_299[0]).value4, (_299[0]).value5));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1221 = _299.slice(1);
                        if (_299[0] instanceof ThreeMiddle && (_299[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1221)(new Two(new Three((_299[0]).value0.value0, (_299[0]).value0.value1, (_299[0]).value0.value2, (_299[0]).value0.value3, (_299[0]).value1, (_299[0]).value2, _300), (_299[0]).value3, (_299[0]).value4, (_299[0]).value5));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1233 = _299.slice(1);
                        if (_299[0] instanceof ThreeMiddle && (_299[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1233)(new Two((_299[0]).value0, (_299[0]).value1, (_299[0]).value2, new Three(_300, (_299[0]).value3, (_299[0]).value4, (_299[0]).value5.value0, (_299[0]).value5.value1, (_299[0]).value5.value2, (_299[0]).value5.value3)));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1245 = _299.slice(1);
                        if (_299[0] instanceof ThreeRight && (_299[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_1245)(new Two((_299[0]).value0, (_299[0]).value1, (_299[0]).value2, new Three((_299[0]).value3.value0, (_299[0]).value3.value1, (_299[0]).value3.value2, (_299[0]).value3.value3, (_299[0]).value4, (_299[0]).value5, _300)));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1260 = _299.slice(1);
                        if (_299[0] instanceof ThreeLeft && (_299[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1260)(new Three(new Two(_300, (_299[0]).value0, (_299[0]).value1, (_299[0]).value2.value0), (_299[0]).value2.value1, (_299[0]).value2.value2, new Two((_299[0]).value2.value3, (_299[0]).value2.value4, (_299[0]).value2.value5, (_299[0]).value2.value6), (_299[0]).value3, (_299[0]).value4, (_299[0]).value5));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1275 = _299.slice(1);
                        if (_299[0] instanceof ThreeMiddle && (_299[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1275)(new Three(new Two((_299[0]).value0.value0, (_299[0]).value0.value1, (_299[0]).value0.value2, (_299[0]).value0.value3), (_299[0]).value0.value4, (_299[0]).value0.value5, new Two((_299[0]).value0.value6, (_299[0]).value1, (_299[0]).value2, _300), (_299[0]).value3, (_299[0]).value4, (_299[0]).value5));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1290 = _299.slice(1);
                        if (_299[0] instanceof ThreeMiddle && (_299[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1290)(new Three((_299[0]).value0, (_299[0]).value1, (_299[0]).value2, new Two(_300, (_299[0]).value3, (_299[0]).value4, (_299[0]).value5.value0), (_299[0]).value5.value1, (_299[0]).value5.value2, new Two((_299[0]).value5.value3, (_299[0]).value5.value4, (_299[0]).value5.value5, (_299[0]).value5.value6)));
                        };
                    };
                    if (_299.length >= 1) {
                        var _1305 = _299.slice(1);
                        if (_299[0] instanceof ThreeRight && (_299[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_1305)(new Three((_299[0]).value0, (_299[0]).value1, (_299[0]).value2, new Two((_299[0]).value3.value0, (_299[0]).value3.value1, (_299[0]).value3.value2, (_299[0]).value3.value3), (_299[0]).value3.value4, (_299[0]).value3.value5, new Two((_299[0]).value3.value6, (_299[0]).value4, (_299[0]).value5, _300)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__302) {
            return function (__copy__303) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _302 = __copy__302;
                var _303 = __copy__303;
                tco: while (true) {
                    if (_303 instanceof Two && (_303.value0 instanceof Leaf && _303.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_302)(Leaf.value);
                    };
                    if (_303 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__302 = Prelude[":"](new TwoRight(_303.value0, _303.value1, _303.value2))(_302);
                        var __tco__303 = _303.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _302 = __tco__302;
                        _303 = __tco__303;
                        continue tco;
                    };
                    if (_303 instanceof Three && (_303.value0 instanceof Leaf && (_303.value3 instanceof Leaf && _303.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _303.value1, _303.value2))(_302))(Leaf.value);
                    };
                    if (_303 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__302 = Prelude[":"](new ThreeRight(_303.value0, _303.value1, _303.value2, _303.value3, _303.value4, _303.value5))(_302);
                        var __tco__303 = _303.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _302 = __tco__302;
                        _303 = __tco__303;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__301) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _301 = __copy__301;
            tco: while (true) {
                if (_301 instanceof Two && _301.value3 instanceof Leaf) {
                    return {
                        key: _301.value1, 
                        value: _301.value2
                    };
                };
                if (_301 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__301 = _301.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _301 = __tco__301;
                    continue tco;
                };
                if (_301 instanceof Three && _301.value6 instanceof Leaf) {
                    return {
                        key: _301.value4, 
                        value: _301.value5
                    };
                };
                if (_301 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__301 = _301.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _301 = __tco__301;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__296) {
            return function (__copy__297) {
                return function (__copy__298) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _296 = __copy__296;
                    var _297 = __copy__297;
                    var _298 = __copy__298;
                    tco: while (true) {
                        if (_298 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_296)(Leaf.value);
                        };
                        if (_298 instanceof Two && (_298.value0 instanceof Leaf && (_298.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value1)))) {
                            return up(__dict_Ord_19)(_296)(Leaf.value);
                        };
                        if (_298 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value1)) {
                                var max = maxNode(__dict_Ord_19)(_298.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _298.value3))(_296))(_298.value0);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_297)(_298.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__296 = Prelude[":"](new TwoLeft(_298.value1, _298.value2, _298.value3))(_296);
                                var __tco__297 = _297;
                                var __tco__298 = _298.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _296 = __tco__296;
                                _297 = __tco__297;
                                _298 = __tco__298;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__296 = Prelude[":"](new TwoRight(_298.value0, _298.value1, _298.value2))(_296);
                                var __tco__297 = _297;
                                var __tco__298 = _298.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _296 = __tco__296;
                                _297 = __tco__297;
                                _298 = __tco__298;
                                continue tco;
                            };
                        };
                        if (_298 instanceof Three && (_298.value0 instanceof Leaf && (_298.value3 instanceof Leaf && _298.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value1)) {
                                return fromZipper(__dict_Ord_19)(_296)(new Two(Leaf.value, _298.value4, _298.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value4)) {
                                return fromZipper(__dict_Ord_19)(_296)(new Two(Leaf.value, _298.value1, _298.value2, Leaf.value));
                            };
                        };
                        if (_298 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value1)) {
                                var max = maxNode(__dict_Ord_19)(_298.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _298.value3, _298.value4, _298.value5, _298.value6))(_296))(_298.value0);
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_297)(_298.value4)) {
                                var max = maxNode(__dict_Ord_19)(_298.value3);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_298.value0, _298.value1, _298.value2, max.key, max.value, _298.value6))(_296))(_298.value3);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_297)(_298.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__296 = Prelude[":"](new ThreeLeft(_298.value1, _298.value2, _298.value3, _298.value4, _298.value5, _298.value6))(_296);
                                var __tco__297 = _297;
                                var __tco__298 = _298.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _296 = __tco__296;
                                _297 = __tco__297;
                                _298 = __tco__298;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_19)(_298.value1)(_297) && Prelude["<"](__dict_Ord_19)(_297)(_298.value4)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__296 = Prelude[":"](new ThreeMiddle(_298.value0, _298.value1, _298.value2, _298.value4, _298.value5, _298.value6))(_296);
                                var __tco__297 = _297;
                                var __tco__298 = _298.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _296 = __tco__296;
                                _297 = __tco__297;
                                _298 = __tco__298;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__296 = Prelude[":"](new ThreeRight(_298.value0, _298.value1, _298.value2, _298.value3, _298.value4, _298.value5))(_296);
                                var __tco__297 = _297;
                                var __tco__298 = _298.value6;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _296 = __tco__296;
                                _297 = __tco__297;
                                _298 = __tco__298;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_289) {
        if (_289 instanceof Leaf) {
            return [ 0 ];
        };
        if (_289 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_289.value0))(allHeights(_289.value3)));
        };
        if (_289 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_289.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_289.value3))(allHeights(_289.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _1390 = f(lookup(__dict_Ord_20)(k)(m));
                if (_1390 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_1390 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_1390.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var unionWith = function (__dict_Ord_21) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (_304) {
                    return function (_305) {
                        return alter(__dict_Ord_21)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_305.value1)(f(_305.value1))))(_305.value0)(_304);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_22) {
    return unionWith(__dict_Ord_22)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_23) {
    return new Prelude.Semigroup(union(__dict_Ord_23));
};
var monoidMap = function (__dict_Ord_14) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_14);
    }, empty);
};
var traversableMap = function (__dict_Ord_24) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_26) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_24))(__dict_Applicative_26)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_25) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_25["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_24))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_25)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_25)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_27) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_27))(empty);
};
var update = function (__dict_Ord_28) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_28)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    alter: alter, 
    checkValid: checkValid, 
    "delete": $$delete, 
    empty: empty, 
    eqMap: eqMap, 
    foldableMap: foldableMap, 
    fromList: fromList, 
    functorMap: functorMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    monoidMap: monoidMap, 
    semigroupMap: semigroupMap, 
    showMap: showMap, 
    showTree: showTree, 
    singleton: singleton, 
    size: size, 
    toList: toList, 
    traversableMap: traversableMap, 
    union: union, 
    unionWith: unionWith, 
    unions: unions, 
    update: update, 
    values: values
};
