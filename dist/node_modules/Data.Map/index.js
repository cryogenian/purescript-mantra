// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
function Leaf() {

};
Leaf.value = new Leaf();
function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
Two.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new Two(value0, value1, value2, value3);
            };
        };
    };
};
function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
};
Three.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return function (value6) {
                            return new Three(value0, value1, value2, value3, value4, value5, value6);
                        };
                    };
                };
            };
        };
    };
};
function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoLeft(value0, value1, value2);
        };
    };
};
function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
};
TwoRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return new TwoRight(value0, value1, value2);
        };
    };
};
function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeLeft.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeMiddle.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
};
ThreeRight.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return function (value4) {
                    return function (value5) {
                        return new ThreeRight(value0, value1, value2, value3, value4, value5);
                    };
                };
            };
        };
    };
};
function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
};
KickUp.create = function (value0) {
    return function (value1) {
        return function (value2) {
            return function (value3) {
                return new KickUp(value0, value1, value2, value3);
            };
        };
    };
};
var values = function (_108) {
    if (_108 instanceof Leaf) {
        return [  ];
    };
    if (_108 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_108.value0))(Prelude["++"](Data_Array.semigroupArray)([ _108.value2 ])(values(_108.value3)));
    };
    if (_108 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(values(_108.value0))(Prelude["++"](Data_Array.semigroupArray)([ _108.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_108.value3))(Prelude["++"](Data_Array.semigroupArray)([ _108.value5 ])(values(_108.value6)))));
    };
    throw new Error("Failed pattern match");
};
var toList = function (_106) {
    if (_106 instanceof Leaf) {
        return [  ];
    };
    if (_106 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_106.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_106.value1, _106.value2) ])(toList(_106.value3)));
    };
    if (_106 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(toList(_106.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_106.value1, _106.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_106.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_106.value4, _106.value5) ])(toList(_106.value6)))));
    };
    throw new Error("Failed pattern match");
};
var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_100) {
            if (_100 instanceof Leaf) {
                return "Leaf";
            };
            if (_100 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_100.value0) + (") (" + (Prelude.show(__dict_Show_0)(_100.value1) + (") (" + (Prelude.show(__dict_Show_1)(_100.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_100.value3) + ")")))))));
            };
            if (_100 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_100.value0) + (") (" + (Prelude.show(__dict_Show_0)(_100.value1) + (") (" + (Prelude.show(__dict_Show_1)(_100.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_100.value3) + (") (" + (Prelude.show(__dict_Show_0)(_100.value4) + (") (" + (Prelude.show(__dict_Show_1)(_100.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_100.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_4) {
    return function (__copy__102) {
        return function (__copy__103) {
            var __dict_Ord_4 = __copy___dict_Ord_4;
            var _102 = __copy__102;
            var _103 = __copy__103;
            tco: while (true) {
                if (_103 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                if (_103 instanceof Two && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_102)(_103.value1)) {
                    return new Data_Maybe.Just(_103.value2);
                };
                if (_103 instanceof Two && Prelude["<"](__dict_Ord_4)(_102)(_103.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__102 = _102;
                    var __tco__103 = _103.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _102 = __tco__102;
                    _103 = __tco__103;
                    continue tco;
                };
                if (_103 instanceof Two) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__102 = _102;
                    var __tco__103 = _103.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _102 = __tco__102;
                    _103 = __tco__103;
                    continue tco;
                };
                if (_103 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_102)(_103.value1)) {
                    return new Data_Maybe.Just(_103.value2);
                };
                if (_103 instanceof Three && Prelude["=="](__dict_Ord_4["__superclass_Prelude.Eq_0"]())(_102)(_103.value4)) {
                    return new Data_Maybe.Just(_103.value5);
                };
                if (_103 instanceof Three && Prelude["<"](__dict_Ord_4)(_102)(_103.value1)) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__102 = _102;
                    var __tco__103 = _103.value0;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _102 = __tco__102;
                    _103 = __tco__103;
                    continue tco;
                };
                if (_103 instanceof Three && (Prelude["<"](__dict_Ord_4)(_103.value1)(_102) && Prelude["<="](__dict_Ord_4)(_102)(_103.value4))) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__102 = _102;
                    var __tco__103 = _103.value3;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _102 = __tco__102;
                    _103 = __tco__103;
                    continue tco;
                };
                if (_103 instanceof Three) {
                    var __tco___dict_Ord_4 = __dict_Ord_4;
                    var __tco__102 = _102;
                    var __tco__103 = _103.value6;
                    __dict_Ord_4 = __tco___dict_Ord_4;
                    _102 = __tco__102;
                    _103 = __tco__103;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var member = function (__dict_Ord_5) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_5)(k)(m));
        };
    };
};
var keys = function (_107) {
    if (_107 instanceof Leaf) {
        return [  ];
    };
    if (_107 instanceof Two) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_107.value0))(Prelude["++"](Data_Array.semigroupArray)([ _107.value1 ])(keys(_107.value3)));
    };
    if (_107 instanceof Three) {
        return Prelude["++"](Data_Array.semigroupArray)(keys(_107.value0))(Prelude["++"](Data_Array.semigroupArray)([ _107.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_107.value3))(Prelude["++"](Data_Array.semigroupArray)([ _107.value4 ])(keys(_107.value6)))));
    };
    throw new Error("Failed pattern match");
};
var isEmpty = function (_101) {
    if (_101 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (_109) {
    return function (_110) {
        if (_110 instanceof Leaf) {
            return Leaf.value;
        };
        if (_110 instanceof Two) {
            return new Two(Prelude["<$>"](functorMap)(_109)(_110.value0), _110.value1, _109(_110.value2), Prelude["<$>"](functorMap)(_109)(_110.value3));
        };
        if (_110 instanceof Three) {
            return new Three(Prelude["<$>"](functorMap)(_109)(_110.value0), _110.value1, _109(_110.value2), Prelude["<$>"](functorMap)(_109)(_110.value3), _110.value4, _109(_110.value5), Prelude["<$>"](functorMap)(_109)(_110.value6));
        };
        throw new Error("Failed pattern match");
    };
});
var map = Prelude["<$>"](functorMap);
var fromZipper = function (__copy___dict_Ord_6) {
    return function (__copy__104) {
        return function (__copy__105) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var _104 = __copy__104;
            var _105 = __copy__105;
            tco: while (true) {
                if (_104.length === 0) {
                    return _105;
                };
                if (_104.length >= 1) {
                    var _550 = _104.slice(1);
                    if (_104[0] instanceof TwoLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__105 = new Two(_105, (_104[0]).value0, (_104[0]).value1, (_104[0]).value2);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _104 = _550;
                        _105 = __tco__105;
                        continue tco;
                    };
                };
                if (_104.length >= 1) {
                    var _555 = _104.slice(1);
                    if (_104[0] instanceof TwoRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__105 = new Two((_104[0]).value0, (_104[0]).value1, (_104[0]).value2, _105);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _104 = _555;
                        _105 = __tco__105;
                        continue tco;
                    };
                };
                if (_104.length >= 1) {
                    var _563 = _104.slice(1);
                    if (_104[0] instanceof ThreeLeft) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__105 = new Three(_105, (_104[0]).value0, (_104[0]).value1, (_104[0]).value2, (_104[0]).value3, (_104[0]).value4, (_104[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _104 = _563;
                        _105 = __tco__105;
                        continue tco;
                    };
                };
                if (_104.length >= 1) {
                    var _571 = _104.slice(1);
                    if (_104[0] instanceof ThreeMiddle) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__105 = new Three((_104[0]).value0, (_104[0]).value1, (_104[0]).value2, _105, (_104[0]).value3, (_104[0]).value4, (_104[0]).value5);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _104 = _571;
                        _105 = __tco__105;
                        continue tco;
                    };
                };
                if (_104.length >= 1) {
                    var _579 = _104.slice(1);
                    if (_104[0] instanceof ThreeRight) {
                        var __tco___dict_Ord_6 = __dict_Ord_6;
                        var __tco__105 = new Three((_104[0]).value0, (_104[0]).value1, (_104[0]).value2, (_104[0]).value3, (_104[0]).value4, (_104[0]).value5, _105);
                        __dict_Ord_6 = __tco___dict_Ord_6;
                        _104 = _579;
                        _105 = __tco__105;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var insert = function (__dict_Ord_7) {
    var up = function (__copy___dict_Ord_8) {
        return function (__copy__116) {
            return function (__copy__117) {
                var __dict_Ord_8 = __copy___dict_Ord_8;
                var _116 = __copy__116;
                var _117 = __copy__117;
                tco: while (true) {
                    if (_116.length === 0) {
                        return new Two(_117.value0, _117.value1, _117.value2, _117.value3);
                    };
                    if (_116.length >= 1) {
                        var _594 = _116.slice(1);
                        if (_116[0] instanceof TwoLeft) {
                            return fromZipper(__dict_Ord_8)(_594)(new Three(_117.value0, _117.value1, _117.value2, _117.value3, (_116[0]).value0, (_116[0]).value1, (_116[0]).value2));
                        };
                    };
                    if (_116.length >= 1) {
                        var _603 = _116.slice(1);
                        if (_116[0] instanceof TwoRight) {
                            return fromZipper(__dict_Ord_8)(_603)(new Three((_116[0]).value0, (_116[0]).value1, (_116[0]).value2, _117.value0, _117.value1, _117.value2, _117.value3));
                        };
                    };
                    if (_116.length >= 1) {
                        var _615 = _116.slice(1);
                        if (_116[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__117 = new KickUp(new Two(_117.value0, _117.value1, _117.value2, _117.value3), (_116[0]).value0, (_116[0]).value1, new Two((_116[0]).value2, (_116[0]).value3, (_116[0]).value4, (_116[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _116 = _615;
                            _117 = __tco__117;
                            continue tco;
                        };
                    };
                    if (_116.length >= 1) {
                        var _627 = _116.slice(1);
                        if (_116[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__117 = new KickUp(new Two((_116[0]).value0, (_116[0]).value1, (_116[0]).value2, _117.value0), _117.value1, _117.value2, new Two(_117.value3, (_116[0]).value3, (_116[0]).value4, (_116[0]).value5));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _116 = _627;
                            _117 = __tco__117;
                            continue tco;
                        };
                    };
                    if (_116.length >= 1) {
                        var _639 = _116.slice(1);
                        if (_116[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_8 = __dict_Ord_8;
                            var __tco__117 = new KickUp(new Two((_116[0]).value0, (_116[0]).value1, (_116[0]).value2, (_116[0]).value3), (_116[0]).value4, (_116[0]).value5, new Two(_117.value0, _117.value1, _117.value2, _117.value3));
                            __dict_Ord_8 = __tco___dict_Ord_8;
                            _116 = _639;
                            _117 = __tco__117;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_9) {
        return function (__copy__112) {
            return function (__copy__113) {
                return function (__copy__114) {
                    return function (__copy__115) {
                        var __dict_Ord_9 = __copy___dict_Ord_9;
                        var _112 = __copy__112;
                        var _113 = __copy__113;
                        var _114 = __copy__114;
                        var _115 = __copy__115;
                        tco: while (true) {
                            if (_115 instanceof Leaf) {
                                return up(__dict_Ord_9)(_112)(new KickUp(Leaf.value, _113, _114, Leaf.value));
                            };
                            if (_115 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_113)(_115.value1)) {
                                return fromZipper(__dict_Ord_9)(_112)(new Two(_115.value0, _113, _114, _115.value3));
                            };
                            if (_115 instanceof Two && Prelude["<"](__dict_Ord_9)(_113)(_115.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__112 = Prelude[":"](new TwoLeft(_115.value1, _115.value2, _115.value3))(_112);
                                var __tco__113 = _113;
                                var __tco__114 = _114;
                                var __tco__115 = _115.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _112 = __tco__112;
                                _113 = __tco__113;
                                _114 = __tco__114;
                                _115 = __tco__115;
                                continue tco;
                            };
                            if (_115 instanceof Two) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__112 = Prelude[":"](new TwoRight(_115.value0, _115.value1, _115.value2))(_112);
                                var __tco__113 = _113;
                                var __tco__114 = _114;
                                var __tco__115 = _115.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _112 = __tco__112;
                                _113 = __tco__113;
                                _114 = __tco__114;
                                _115 = __tco__115;
                                continue tco;
                            };
                            if (_115 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_113)(_115.value1)) {
                                return fromZipper(__dict_Ord_9)(_112)(new Three(_115.value0, _113, _114, _115.value3, _115.value4, _115.value5, _115.value6));
                            };
                            if (_115 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(_113)(_115.value4)) {
                                return fromZipper(__dict_Ord_9)(_112)(new Three(_115.value0, _115.value1, _115.value2, _115.value3, _113, _114, _115.value6));
                            };
                            if (_115 instanceof Three && Prelude["<"](__dict_Ord_9)(_113)(_115.value1)) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__112 = Prelude[":"](new ThreeLeft(_115.value1, _115.value2, _115.value3, _115.value4, _115.value5, _115.value6))(_112);
                                var __tco__113 = _113;
                                var __tco__114 = _114;
                                var __tco__115 = _115.value0;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _112 = __tco__112;
                                _113 = __tco__113;
                                _114 = __tco__114;
                                _115 = __tco__115;
                                continue tco;
                            };
                            if (_115 instanceof Three && (Prelude["<"](__dict_Ord_9)(_115.value1)(_113) && Prelude["<="](__dict_Ord_9)(_113)(_115.value4))) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__112 = Prelude[":"](new ThreeMiddle(_115.value0, _115.value1, _115.value2, _115.value4, _115.value5, _115.value6))(_112);
                                var __tco__113 = _113;
                                var __tco__114 = _114;
                                var __tco__115 = _115.value3;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _112 = __tco__112;
                                _113 = __tco__113;
                                _114 = __tco__114;
                                _115 = __tco__115;
                                continue tco;
                            };
                            if (_115 instanceof Three) {
                                var __tco___dict_Ord_9 = __dict_Ord_9;
                                var __tco__112 = Prelude[":"](new ThreeRight(_115.value0, _115.value1, _115.value2, _115.value3, _115.value4, _115.value5))(_112);
                                var __tco__113 = _113;
                                var __tco__114 = _114;
                                var __tco__115 = _115.value6;
                                __dict_Ord_9 = __tco___dict_Ord_9;
                                _112 = __tco__112;
                                _113 = __tco__113;
                                _114 = __tco__114;
                                _115 = __tco__115;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_7)([  ]);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_10)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_11) {
    return function (__dict_Eq_12) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqMap(__dict_Eq_11)(__dict_Eq_12))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_11)(__dict_Eq_12)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_13) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
        return function (_99) {
            return insert(__dict_Ord_13)(_99.value0)(_99.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_15) {
    var up = function (__copy___dict_Ord_16) {
        return function (__copy__121) {
            return function (__copy__122) {
                var __dict_Ord_16 = __copy___dict_Ord_16;
                var _121 = __copy__121;
                var _122 = __copy__122;
                tco: while (true) {
                    if (_121.length === 0) {
                        return _122;
                    };
                    if (_121.length >= 1) {
                        var _700 = _121.slice(1);
                        if (_121[0] instanceof TwoLeft && ((_121[0]).value2 instanceof Leaf && _122 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_700)(new Two(Leaf.value, (_121[0]).value0, (_121[0]).value1, Leaf.value));
                        };
                    };
                    if (_121.length >= 1) {
                        var _705 = _121.slice(1);
                        if (_121[0] instanceof TwoRight && ((_121[0]).value0 instanceof Leaf && _122 instanceof Leaf)) {
                            return fromZipper(__dict_Ord_16)(_705)(new Two(Leaf.value, (_121[0]).value1, (_121[0]).value2, Leaf.value));
                        };
                    };
                    if (_121.length >= 1) {
                        var _714 = _121.slice(1);
                        if (_121[0] instanceof TwoLeft && (_121[0]).value2 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__122 = new Three(_122, (_121[0]).value0, (_121[0]).value1, (_121[0]).value2.value0, (_121[0]).value2.value1, (_121[0]).value2.value2, (_121[0]).value2.value3);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _121 = _714;
                            _122 = __tco__122;
                            continue tco;
                        };
                    };
                    if (_121.length >= 1) {
                        var _723 = _121.slice(1);
                        if (_121[0] instanceof TwoRight && (_121[0]).value0 instanceof Two) {
                            var __tco___dict_Ord_16 = __dict_Ord_16;
                            var __tco__122 = new Three((_121[0]).value0.value0, (_121[0]).value0.value1, (_121[0]).value0.value2, (_121[0]).value0.value3, (_121[0]).value1, (_121[0]).value2, _122);
                            __dict_Ord_16 = __tco___dict_Ord_16;
                            _121 = _723;
                            _122 = __tco__122;
                            continue tco;
                        };
                    };
                    if (_121.length >= 1) {
                        var _735 = _121.slice(1);
                        if (_121[0] instanceof TwoLeft && (_121[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_735)(new Two(new Two(_122, (_121[0]).value0, (_121[0]).value1, (_121[0]).value2.value0), (_121[0]).value2.value1, (_121[0]).value2.value2, new Two((_121[0]).value2.value3, (_121[0]).value2.value4, (_121[0]).value2.value5, (_121[0]).value2.value6)));
                        };
                    };
                    if (_121.length >= 1) {
                        var _747 = _121.slice(1);
                        if (_121[0] instanceof TwoRight && (_121[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_747)(new Two(new Two((_121[0]).value0.value0, (_121[0]).value0.value1, (_121[0]).value0.value2, (_121[0]).value0.value3), (_121[0]).value0.value4, (_121[0]).value0.value5, new Two((_121[0]).value0.value6, (_121[0]).value1, (_121[0]).value2, _122)));
                        };
                    };
                    if (_121.length >= 1) {
                        var _755 = _121.slice(1);
                        if (_121[0] instanceof ThreeLeft && ((_121[0]).value2 instanceof Leaf && ((_121[0]).value5 instanceof Leaf && _122 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_755)(new Three(Leaf.value, (_121[0]).value0, (_121[0]).value1, Leaf.value, (_121[0]).value3, (_121[0]).value4, Leaf.value));
                        };
                    };
                    if (_121.length >= 1) {
                        var _763 = _121.slice(1);
                        if (_121[0] instanceof ThreeMiddle && ((_121[0]).value0 instanceof Leaf && ((_121[0]).value5 instanceof Leaf && _122 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_763)(new Three(Leaf.value, (_121[0]).value1, (_121[0]).value2, Leaf.value, (_121[0]).value3, (_121[0]).value4, Leaf.value));
                        };
                    };
                    if (_121.length >= 1) {
                        var _771 = _121.slice(1);
                        if (_121[0] instanceof ThreeRight && ((_121[0]).value0 instanceof Leaf && ((_121[0]).value3 instanceof Leaf && _122 instanceof Leaf))) {
                            return fromZipper(__dict_Ord_16)(_771)(new Three(Leaf.value, (_121[0]).value1, (_121[0]).value2, Leaf.value, (_121[0]).value4, (_121[0]).value5, Leaf.value));
                        };
                    };
                    if (_121.length >= 1) {
                        var _783 = _121.slice(1);
                        if (_121[0] instanceof ThreeLeft && (_121[0]).value2 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_783)(new Two(new Three(_122, (_121[0]).value0, (_121[0]).value1, (_121[0]).value2.value0, (_121[0]).value2.value1, (_121[0]).value2.value2, (_121[0]).value2.value3), (_121[0]).value3, (_121[0]).value4, (_121[0]).value5));
                        };
                    };
                    if (_121.length >= 1) {
                        var _795 = _121.slice(1);
                        if (_121[0] instanceof ThreeMiddle && (_121[0]).value0 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_795)(new Two(new Three((_121[0]).value0.value0, (_121[0]).value0.value1, (_121[0]).value0.value2, (_121[0]).value0.value3, (_121[0]).value1, (_121[0]).value2, _122), (_121[0]).value3, (_121[0]).value4, (_121[0]).value5));
                        };
                    };
                    if (_121.length >= 1) {
                        var _807 = _121.slice(1);
                        if (_121[0] instanceof ThreeMiddle && (_121[0]).value5 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_807)(new Two((_121[0]).value0, (_121[0]).value1, (_121[0]).value2, new Three(_122, (_121[0]).value3, (_121[0]).value4, (_121[0]).value5.value0, (_121[0]).value5.value1, (_121[0]).value5.value2, (_121[0]).value5.value3)));
                        };
                    };
                    if (_121.length >= 1) {
                        var _819 = _121.slice(1);
                        if (_121[0] instanceof ThreeRight && (_121[0]).value3 instanceof Two) {
                            return fromZipper(__dict_Ord_16)(_819)(new Two((_121[0]).value0, (_121[0]).value1, (_121[0]).value2, new Three((_121[0]).value3.value0, (_121[0]).value3.value1, (_121[0]).value3.value2, (_121[0]).value3.value3, (_121[0]).value4, (_121[0]).value5, _122)));
                        };
                    };
                    if (_121.length >= 1) {
                        var _834 = _121.slice(1);
                        if (_121[0] instanceof ThreeLeft && (_121[0]).value2 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_834)(new Three(new Two(_122, (_121[0]).value0, (_121[0]).value1, (_121[0]).value2.value0), (_121[0]).value2.value1, (_121[0]).value2.value2, new Two((_121[0]).value2.value3, (_121[0]).value2.value4, (_121[0]).value2.value5, (_121[0]).value2.value6), (_121[0]).value3, (_121[0]).value4, (_121[0]).value5));
                        };
                    };
                    if (_121.length >= 1) {
                        var _849 = _121.slice(1);
                        if (_121[0] instanceof ThreeMiddle && (_121[0]).value0 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_849)(new Three(new Two((_121[0]).value0.value0, (_121[0]).value0.value1, (_121[0]).value0.value2, (_121[0]).value0.value3), (_121[0]).value0.value4, (_121[0]).value0.value5, new Two((_121[0]).value0.value6, (_121[0]).value1, (_121[0]).value2, _122), (_121[0]).value3, (_121[0]).value4, (_121[0]).value5));
                        };
                    };
                    if (_121.length >= 1) {
                        var _864 = _121.slice(1);
                        if (_121[0] instanceof ThreeMiddle && (_121[0]).value5 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_864)(new Three((_121[0]).value0, (_121[0]).value1, (_121[0]).value2, new Two(_122, (_121[0]).value3, (_121[0]).value4, (_121[0]).value5.value0), (_121[0]).value5.value1, (_121[0]).value5.value2, new Two((_121[0]).value5.value3, (_121[0]).value5.value4, (_121[0]).value5.value5, (_121[0]).value5.value6)));
                        };
                    };
                    if (_121.length >= 1) {
                        var _879 = _121.slice(1);
                        if (_121[0] instanceof ThreeRight && (_121[0]).value3 instanceof Three) {
                            return fromZipper(__dict_Ord_16)(_879)(new Three((_121[0]).value0, (_121[0]).value1, (_121[0]).value2, new Two((_121[0]).value3.value0, (_121[0]).value3.value1, (_121[0]).value3.value2, (_121[0]).value3.value3), (_121[0]).value3.value4, (_121[0]).value3.value5, new Two((_121[0]).value3.value6, (_121[0]).value4, (_121[0]).value5, _122)));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_17) {
        return function (__copy__124) {
            return function (__copy__125) {
                var __dict_Ord_17 = __copy___dict_Ord_17;
                var _124 = __copy__124;
                var _125 = __copy__125;
                tco: while (true) {
                    if (_125 instanceof Two && (_125.value0 instanceof Leaf && _125.value3 instanceof Leaf)) {
                        return up(__dict_Ord_17)(_124)(Leaf.value);
                    };
                    if (_125 instanceof Two) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__124 = Prelude[":"](new TwoRight(_125.value0, _125.value1, _125.value2))(_124);
                        var __tco__125 = _125.value3;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _124 = __tco__124;
                        _125 = __tco__125;
                        continue tco;
                    };
                    if (_125 instanceof Three && (_125.value0 instanceof Leaf && (_125.value3 instanceof Leaf && _125.value6 instanceof Leaf))) {
                        return up(__dict_Ord_17)(Prelude[":"](new TwoRight(Leaf.value, _125.value1, _125.value2))(_124))(Leaf.value);
                    };
                    if (_125 instanceof Three) {
                        var __tco___dict_Ord_17 = __dict_Ord_17;
                        var __tco__124 = Prelude[":"](new ThreeRight(_125.value0, _125.value1, _125.value2, _125.value3, _125.value4, _125.value5))(_124);
                        var __tco__125 = _125.value6;
                        __dict_Ord_17 = __tco___dict_Ord_17;
                        _124 = __tco__124;
                        _125 = __tco__125;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_18) {
        return function (__copy__123) {
            var __dict_Ord_18 = __copy___dict_Ord_18;
            var _123 = __copy__123;
            tco: while (true) {
                if (_123 instanceof Two && _123.value3 instanceof Leaf) {
                    return {
                        key: _123.value1, 
                        value: _123.value2
                    };
                };
                if (_123 instanceof Two) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__123 = _123.value3;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _123 = __tco__123;
                    continue tco;
                };
                if (_123 instanceof Three && _123.value6 instanceof Leaf) {
                    return {
                        key: _123.value4, 
                        value: _123.value5
                    };
                };
                if (_123 instanceof Three) {
                    var __tco___dict_Ord_18 = __dict_Ord_18;
                    var __tco__123 = _123.value6;
                    __dict_Ord_18 = __tco___dict_Ord_18;
                    _123 = __tco__123;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var down = function (__copy___dict_Ord_19) {
        return function (__copy__118) {
            return function (__copy__119) {
                return function (__copy__120) {
                    var __dict_Ord_19 = __copy___dict_Ord_19;
                    var _118 = __copy__118;
                    var _119 = __copy__119;
                    var _120 = __copy__120;
                    tco: while (true) {
                        if (_120 instanceof Leaf) {
                            return fromZipper(__dict_Ord_19)(_118)(Leaf.value);
                        };
                        if (_120 instanceof Two && (_120.value0 instanceof Leaf && (_120.value3 instanceof Leaf && Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value1)))) {
                            return up(__dict_Ord_19)(_118)(Leaf.value);
                        };
                        if (_120 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value1)) {
                                var max = maxNode(__dict_Ord_19)(_120.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new TwoLeft(max.key, max.value, _120.value3))(_118))(_120.value0);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_119)(_120.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__118 = Prelude[":"](new TwoLeft(_120.value1, _120.value2, _120.value3))(_118);
                                var __tco__119 = _119;
                                var __tco__120 = _120.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _118 = __tco__118;
                                _119 = __tco__119;
                                _120 = __tco__120;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__118 = Prelude[":"](new TwoRight(_120.value0, _120.value1, _120.value2))(_118);
                                var __tco__119 = _119;
                                var __tco__120 = _120.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _118 = __tco__118;
                                _119 = __tco__119;
                                _120 = __tco__120;
                                continue tco;
                            };
                        };
                        if (_120 instanceof Three && (_120.value0 instanceof Leaf && (_120.value3 instanceof Leaf && _120.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value1)) {
                                return fromZipper(__dict_Ord_19)(_118)(new Two(Leaf.value, _120.value4, _120.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value4)) {
                                return fromZipper(__dict_Ord_19)(_118)(new Two(Leaf.value, _120.value1, _120.value2, Leaf.value));
                            };
                        };
                        if (_120 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value1)) {
                                var max = maxNode(__dict_Ord_19)(_120.value0);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeLeft(max.key, max.value, _120.value3, _120.value4, _120.value5, _120.value6))(_118))(_120.value0);
                            };
                            if (Prelude["=="](__dict_Ord_19["__superclass_Prelude.Eq_0"]())(_119)(_120.value4)) {
                                var max = maxNode(__dict_Ord_19)(_120.value3);
                                return removeMaxNode(__dict_Ord_19)(Prelude[":"](new ThreeMiddle(_120.value0, _120.value1, _120.value2, max.key, max.value, _120.value6))(_118))(_120.value3);
                            };
                            if (Prelude["<"](__dict_Ord_19)(_119)(_120.value1)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__118 = Prelude[":"](new ThreeLeft(_120.value1, _120.value2, _120.value3, _120.value4, _120.value5, _120.value6))(_118);
                                var __tco__119 = _119;
                                var __tco__120 = _120.value0;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _118 = __tco__118;
                                _119 = __tco__119;
                                _120 = __tco__120;
                                continue tco;
                            };
                            if (Prelude["<"](__dict_Ord_19)(_120.value1)(_119) && Prelude["<"](__dict_Ord_19)(_119)(_120.value4)) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__118 = Prelude[":"](new ThreeMiddle(_120.value0, _120.value1, _120.value2, _120.value4, _120.value5, _120.value6))(_118);
                                var __tco__119 = _119;
                                var __tco__120 = _120.value3;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _118 = __tco__118;
                                _119 = __tco__119;
                                _120 = __tco__120;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_19 = __dict_Ord_19;
                                var __tco__118 = Prelude[":"](new ThreeRight(_120.value0, _120.value1, _120.value2, _120.value3, _120.value4, _120.value5))(_118);
                                var __tco__119 = _119;
                                var __tco__120 = _120.value6;
                                __dict_Ord_19 = __tco___dict_Ord_19;
                                _118 = __tco__118;
                                _119 = __tco__119;
                                _120 = __tco__120;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    return down(__dict_Ord_15)([  ]);
};
var checkValid = function (tree) {
    var allHeights = function (_111) {
        if (_111 instanceof Leaf) {
            return [ 0 ];
        };
        if (_111 instanceof Two) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_111.value0))(allHeights(_111.value3)));
        };
        if (_111 instanceof Three) {
            return Data_Array.map(function (n) {
                return n + 1;
            })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_111.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_111.value3))(allHeights(_111.value6))));
        };
        throw new Error("Failed pattern match");
    };
    return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
};
var alter = function (__dict_Ord_20) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _964 = f(lookup(__dict_Ord_20)(k)(m));
                if (_964 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_20)(k)(m);
                };
                if (_964 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_20)(k)(_964.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
};
var unionWith = function (__dict_Ord_21) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (_126) {
                    return function (_127) {
                        return alter(__dict_Ord_21)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_127.value1)(f(_127.value1))))(_127.value0)(_126);
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_22) {
    return unionWith(__dict_Ord_22)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_23) {
    return new Prelude.Semigroup(union(__dict_Ord_23));
};
var monoidMap = function (__dict_Ord_14) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_14);
    }, empty);
};
var traversableMap = function (__dict_Ord_24) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_26) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_24))(__dict_Applicative_26)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_25) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_25["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_24))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_25)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_25["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_25)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_27) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_27))(empty);
};
var update = function (__dict_Ord_28) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_28)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    alter: alter, 
    checkValid: checkValid, 
    "delete": $$delete, 
    empty: empty, 
    eqMap: eqMap, 
    foldableMap: foldableMap, 
    fromList: fromList, 
    functorMap: functorMap, 
    insert: insert, 
    isEmpty: isEmpty, 
    keys: keys, 
    lookup: lookup, 
    map: map, 
    member: member, 
    monoidMap: monoidMap, 
    semigroupMap: semigroupMap, 
    showMap: showMap, 
    showTree: showTree, 
    singleton: singleton, 
    size: size, 
    toList: toList, 
    traversableMap: traversableMap, 
    union: union, 
    unionWith: unionWith, 
    unions: unions, 
    update: update, 
    values: values
};
