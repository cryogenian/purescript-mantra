// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = {
    create: function (value) {
        return value;
    }
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_259) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_259) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (_260) {
    return function (_261) {
        if (_261 instanceof Data_Maybe.Just) {
            return _261;
        };
        if (_261 instanceof Data_Maybe.Nothing) {
            return _260;
        };
        throw new Error("Failed pattern match");
    };
});
var runLast = function (_252) {
    return _252;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_255) {
        return function (_256) {
            return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_2))(_255)(_256);
        };
    }, function (_253) {
        return function (_254) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_253)(_254);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_257) {
        return function (_258) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_257)(_258);
        };
    });
};
module.exports = {
    Last: Last, 
    eqLast: eqLast, 
    monoidLast: monoidLast, 
    ordLast: ordLast, 
    runLast: runLast, 
    semigroupLast: semigroupLast, 
    showLast: showLast
};
