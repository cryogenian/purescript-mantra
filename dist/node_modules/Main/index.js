// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Reactive = require("Control.Reactive");
var Signal_Time = require("Signal.Time");
var Signal = require("Signal");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Component = {
    create: function (value) {
        return value;
    }
};

function log(a) {
  console.log(a);
  return a;
}
;

function trace(a) {
  return function() {
    console.log(a);
    return a;
  };
}
;

var nothing = null;
;
var rf = function (state) {
    return function __do() {
        trace("!!!!")();
        trace(state)();
        trace("!!!!")();
        return Prelude.unit;
    };
};
var defineComponent = function (renderFunc) {
    return function (state) {
        return function __do() {
            var _0 = Control_Reactive.newRVar(state)();
            return (function () {
                var cfg = {
                    state: _0, 
                    set: Control_Reactive.writeRVar(_0), 
                    get: Control_Reactive.readRVar(_0), 
                    modify: Control_Reactive.modifyRVar(_0), 
                    render: renderFunc, 
                    signal: Signal["~>"](Signal.functorSignal)(Signal_Time.every(1230))(function (_) {
                        return nothing;
                    })
                };
                return function __do() {
                    Control_Reactive.subscribe(_0)(function (state_1) {
                        return cfg.render(state_1);
                    })();
                    return cfg;
                };
            })()();
        };
    };
};
var comp2 = defineComponent(rf);
var main = function __do() {
    var _1 = comp2(121)();
    Signal.runSignal(Signal["~>"](Signal.functorSignal)(_1.signal)(function (_) {
        return function __do() {
            trace("signaled")();
            return Prelude.unit;
        };
    }))();
    Signal.runSignal(Signal["~>"](Signal.functorSignal)(Signal_Time.every(1000))(function (_) {
        return function __do() {
            _1.modify(function (num) {
                return num + 1;
            })();
            return Prelude.unit;
        };
    }))();
    return Prelude.unit;
};
module.exports = {
    Component: Component, 
    comp2: comp2, 
    defineComponent: defineComponent, 
    log: log, 
    main: main, 
    nothing: nothing, 
    rf: rf, 
    trace: trace
};
