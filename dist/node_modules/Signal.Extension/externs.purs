-- Generated by psc-make version 0.6.2
module Signal.Extension where
import Prelude ()
import Data.Function ()
import Signal.Extension ()
import Signal ()
import Prim ()
import Prelude ()
import Signal ()
import Data.Function ()
infixl 4 ~~>
foreign import bindSigFn :: forall a b. Data.Function.Fn3 (b -> Signal.Signal b) (Signal.Signal a) (a -> Signal.Signal b) (Signal.Signal b)
foreign import (~~>) :: forall a b f. (Prelude.Applicative f) => Signal.Signal (f a) -> (a -> b) -> Signal.Signal (f b)
foreign import instance signalBind :: Prelude.Bind Signal.Signal
foreign import instance signalMonad :: Prelude.Monad Signal.Signal
