module Main where
import Control.Reactive ()
import Main ()
import Prelude ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Control.Reactive ()
import Signal ()
import Signal.Time ()
newtype Component (s :: *) (e :: # !) = Component { render :: Control.Monad.Eff.Eff (reactive :: Control.Reactive.Reactive, mantra :: Main.Mani | e) Prelude.Unit, modify :: (s -> s) -> Control.Monad.Eff.Eff (reactive :: Control.Reactive.Reactive, mantra :: Main.Om | e) Prelude.Unit, get :: Control.Monad.Eff.Eff (reactive :: Control.Reactive.Reactive, mantra :: Main.Om | e) s, set :: s -> Control.Monad.Eff.Eff (reactive :: Control.Reactive.Reactive, mantra :: Main.Om | e) Prelude.Unit, state :: Control.Reactive.RVar s }
foreign import data Mani :: !
foreign import data Om :: !
foreign import comp :: forall e. Control.Monad.Eff.Eff (reactive :: Control.Reactive.Reactive | e) (Main.Component Prim.Number e)
foreign import component :: forall e. Control.Reactive.RVar Prim.Number -> Main.Component Prim.Number e
foreign import trace :: forall a e. a -> Control.Monad.Eff.Eff e a
foreign import log :: forall a. a -> a
