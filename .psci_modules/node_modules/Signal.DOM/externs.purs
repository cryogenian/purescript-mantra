module Signal.DOM where
import Data.Function ()
import Signal.DOM ()
import Signal ()
import Prelude ()
import Signal.Time ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Control.Timer ()
import Data.Function ()
import DOM ()
import Signal ()
import Signal.Time ()
type Touch = { force :: Prim.Number, rotationAngle :: Prim.Number, radiusY :: Prim.Number, radiusX :: Prim.Number, pageY :: Prim.Number, pageX :: Prim.Number, clientY :: Prim.Number, clientX :: Prim.Number, screenY :: Prim.Number, screenX :: Prim.Number, id :: Prim.String }
type CoordinatePair = { y :: Prim.Number, x :: Prim.Number }
foreign import mousePos :: forall e. Control.Monad.Eff.Eff (dom :: DOM.DOM | e) (Signal.Signal Signal.DOM.CoordinatePair)
foreign import tap :: forall e. Control.Monad.Eff.Eff (dom :: DOM.DOM | e) (Signal.Signal Prim.Boolean)
foreign import touch :: forall e. Control.Monad.Eff.Eff (dom :: DOM.DOM | e) (Signal.Signal [Signal.DOM.Touch])
foreign import mouseButton :: forall e. Prim.Number -> Control.Monad.Eff.Eff (dom :: DOM.DOM | e) (Signal.Signal Prim.Boolean)
foreign import keyPressed :: forall e. Prim.Number -> Control.Monad.Eff.Eff (dom :: DOM.DOM | e) (Signal.Signal Prim.Boolean)
foreign import animationFrame :: forall e. Control.Monad.Eff.Eff (timer :: Control.Timer.Timer, dom :: DOM.DOM | e) (Signal.Signal Signal.Time.Time)
