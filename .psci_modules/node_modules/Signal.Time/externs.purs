module Signal.Time where
import Data.Function ()
import Signal.Time ()
import Signal ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Control.Timer ()
import Data.Function ()
import Signal ()
type Time = Prim.Number
foreign import second :: Signal.Time.Time
foreign import now :: forall e. Control.Monad.Eff.Eff (timer :: Control.Timer.Timer | e) Signal.Time.Time
foreign import millisecond :: Signal.Time.Time
foreign import every :: Signal.Time.Time -> Signal.Signal Signal.Time.Time
