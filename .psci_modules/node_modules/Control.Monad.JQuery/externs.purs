module Control.Monad.JQuery where
import Prim ()
import Prelude ()
import Data.Foreign ()
import Control.Monad.Eff ()
import DOM ()
foreign import data JQueryEvent :: *
foreign import data JQuery :: *
foreign import stopImmediatePropagation :: forall eff. Control.Monad.JQuery.JQueryEvent -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import stopPropagation :: forall eff. Control.Monad.JQuery.JQueryEvent -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import preventDefault :: forall eff. Control.Monad.JQuery.JQueryEvent -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import on' :: forall eff a. Prim.String -> Prim.String -> (Control.Monad.JQuery.JQueryEvent -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) a) -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import on :: forall eff a. Prim.String -> (Control.Monad.JQuery.JQueryEvent -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) a) -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import setValue :: forall eff a. a -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import getValue :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Data.Foreign.Foreign
foreign import setText :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import getText :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.String
foreign import body :: forall eff. Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import appendText :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import before :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import clear :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import remove :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import appendAtIndex :: forall eff. Prim.Number -> Control.Monad.JQuery.JQuery -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import append :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import getProp :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Data.Foreign.Foreign
foreign import setProp :: forall a eff. Prim.String -> a -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import removeClass :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import addClass :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import hasClass :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.Boolean
foreign import css :: forall eff css. {  | css } -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import attr :: forall eff attr. {  | attr } -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import setAttr :: forall eff a. Prim.String -> a -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import create :: forall eff. Prim.String -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import closest :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import parent :: forall eff. Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import find :: forall eff. Prim.String -> Control.Monad.JQuery.JQuery -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import select :: forall eff. Prim.String -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
foreign import ready :: forall eff a. Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) a -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Control.Monad.JQuery.JQuery
